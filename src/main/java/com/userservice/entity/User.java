package com.userservice.entity;

import java.util.Objects;
import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import lombok.Getter;
import lombok.Setter;

/*
 * Maps to the 'users' table in the SQLite database.
 *
 * @author Weston Stevens
 */
@Getter
@Setter
@Entity
@Table(name = "users")
public class User implements Serializable {
	private static final long serialVersionUID = 1L;

	// Username is the primary key, which is not autogenerated
	@Id
	private String userName;

	// Name of the user, which cannot be null
	@NotNull
	private String name;

	// User e-mail, which cannot be null
	@NotNull
	private String email;

	/*
	 * Empty constructor
	 */
	public User() {}

	/*
	 * Setter constructor
	 *
	 * @param userName - The user's username
	 * @param name - The user's name
	 * @param email - The user's e-mail address
	 */
	public User(String userName, String name, String email) {
		this.userName = userName;
		this.name = name;
		this.email = email;
	}

	/*
	 * Hashcode method
	 *
	 * @return int - The hashcode
	 */
	@Override
	public int hashCode() {
		return Objects.hash(this.getUserName());
	}

	/*
	 * Equals method. Users are equal if they have the same username.
	 *
	 * @param o - The user being compared
	 */
	@Override
	public boolean equals(Object o) {
		if(o instanceof User) {
			User other = (User)o;
			return other.getUserName().equals(this.getUserName());
		}
		return false;
	}
}